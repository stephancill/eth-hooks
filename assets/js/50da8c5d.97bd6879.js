"use strict";(self.webpackChunketh_hooks=self.webpackChunketh_hooks||[]).push([[3509],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),k=d(n),c=a,h=k["".concat(s,".").concat(c)]||k[c]||m[c]||i;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6543:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return k}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={},s=void 0,d={unversionedId:"api/classes/TestUtils.MockConnector",id:"api/classes/TestUtils.MockConnector",title:"TestUtils.MockConnector",description:"eth-hooks - v4.0.30 / TestUtils / MockConnector",source:"@site/docs/api/classes/TestUtils.MockConnector.md",sourceDirName:"api/classes",slug:"/api/classes/TestUtils.MockConnector",permalink:"/eth-hooks/docs/api/classes/TestUtils.MockConnector",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/classes/TestUtils.MockConnector.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"EthersContext.UserClosedModalError",permalink:"/eth-hooks/docs/api/classes/EthersContext.UserClosedModalError"},next:{title:"EthersContext.ICommonModalConnector",permalink:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"}},p=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Implements",id:"implements",children:[],level:2},{value:"Table of contents",id:"table-of-contents",children:[{value:"Methods",id:"methods",children:[],level:3},{value:"Properties",id:"properties",children:[],level:3},{value:"Constructors",id:"constructors",children:[],level:3}],level:2},{value:"Methods",id:"methods-1",children:[{value:"once",id:"once",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Inherited from",id:"inherited-from",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4},{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Inherited from",id:"inherited-from-1",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"on",id:"on",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Inherited from",id:"inherited-from-2",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"listenerCount",id:"listenercount",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Inherited from",id:"inherited-from-3",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"getEventListeners",id:"geteventlisteners",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Inherited from",id:"inherited-from-4",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"addListener",id:"addlistener",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Inherited from",id:"inherited-from-5",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"on",id:"on-1",children:[{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-6",children:[],level:4},{value:"Inherited from",id:"inherited-from-6",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"once",id:"once-1",children:[{value:"Parameters",id:"parameters-7",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Inherited from",id:"inherited-from-7",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"removeListener",id:"removelistener",children:[{value:"Parameters",id:"parameters-8",children:[],level:4},{value:"Returns",id:"returns-8",children:[],level:4},{value:"Inherited from",id:"inherited-from-8",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"off",id:"off",children:[{value:"Parameters",id:"parameters-9",children:[],level:4},{value:"Returns",id:"returns-9",children:[],level:4},{value:"Inherited from",id:"inherited-from-9",children:[],level:4},{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"removeAllListeners",id:"removealllisteners",children:[{value:"Parameters",id:"parameters-10",children:[],level:4},{value:"Returns",id:"returns-10",children:[],level:4},{value:"Inherited from",id:"inherited-from-10",children:[],level:4},{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"setMaxListeners",id:"setmaxlisteners",children:[{value:"Parameters",id:"parameters-11",children:[],level:4},{value:"Returns",id:"returns-11",children:[],level:4},{value:"Inherited from",id:"inherited-from-11",children:[],level:4},{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"getMaxListeners",id:"getmaxlisteners",children:[{value:"Returns",id:"returns-12",children:[],level:4},{value:"Inherited from",id:"inherited-from-12",children:[],level:4},{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3},{value:"listeners",id:"listeners",children:[{value:"Parameters",id:"parameters-12",children:[],level:4},{value:"Returns",id:"returns-13",children:[],level:4},{value:"Inherited from",id:"inherited-from-13",children:[],level:4},{value:"Defined in",id:"defined-in-13",children:[],level:4}],level:3},{value:"rawListeners",id:"rawlisteners",children:[{value:"Parameters",id:"parameters-13",children:[],level:4},{value:"Returns",id:"returns-14",children:[],level:4},{value:"Inherited from",id:"inherited-from-14",children:[],level:4},{value:"Defined in",id:"defined-in-14",children:[],level:4}],level:3},{value:"emit",id:"emit",children:[{value:"Parameters",id:"parameters-14",children:[],level:4},{value:"Returns",id:"returns-15",children:[],level:4},{value:"Inherited from",id:"inherited-from-15",children:[],level:4},{value:"Defined in",id:"defined-in-15",children:[],level:4}],level:3},{value:"listenerCount",id:"listenercount-1",children:[{value:"Parameters",id:"parameters-15",children:[],level:4},{value:"Returns",id:"returns-16",children:[],level:4},{value:"Inherited from",id:"inherited-from-16",children:[],level:4},{value:"Defined in",id:"defined-in-16",children:[],level:4}],level:3},{value:"prependListener",id:"prependlistener",children:[{value:"Parameters",id:"parameters-16",children:[],level:4},{value:"Returns",id:"returns-17",children:[],level:4},{value:"Inherited from",id:"inherited-from-17",children:[],level:4},{value:"Defined in",id:"defined-in-17",children:[],level:4}],level:3},{value:"prependOnceListener",id:"prependoncelistener",children:[{value:"Parameters",id:"parameters-17",children:[],level:4},{value:"Returns",id:"returns-18",children:[],level:4},{value:"Inherited from",id:"inherited-from-18",children:[],level:4},{value:"Defined in",id:"defined-in-18",children:[],level:4}],level:3},{value:"eventNames",id:"eventnames",children:[{value:"Returns",id:"returns-19",children:[],level:4},{value:"Inherited from",id:"inherited-from-19",children:[],level:4},{value:"Defined in",id:"defined-in-19",children:[],level:4}],level:3},{value:"emitUpdate",id:"emitupdate",children:[{value:"Parameters",id:"parameters-18",children:[],level:4},{value:"Returns",id:"returns-20",children:[],level:4},{value:"Inherited from",id:"inherited-from-20",children:[],level:4},{value:"Defined in",id:"defined-in-20",children:[],level:4}],level:3},{value:"emitError",id:"emiterror",children:[{value:"Parameters",id:"parameters-19",children:[],level:4},{value:"Returns",id:"returns-21",children:[],level:4},{value:"Inherited from",id:"inherited-from-21",children:[],level:4},{value:"Defined in",id:"defined-in-21",children:[],level:4}],level:3},{value:"emitDeactivate",id:"emitdeactivate",children:[{value:"Returns",id:"returns-22",children:[],level:4},{value:"Inherited from",id:"inherited-from-22",children:[],level:4},{value:"Defined in",id:"defined-in-22",children:[],level:4}],level:3},{value:"replaceWithSpies",id:"replacewithspies",children:[{value:"Returns",id:"returns-23",children:[],level:4},{value:"Defined in",id:"defined-in-23",children:[],level:4}],level:3},{value:"hasCachedProvider",id:"hascachedprovider",children:[{value:"Returns",id:"returns-24",children:[],level:4},{value:"Implementation of",id:"implementation-of",children:[],level:4},{value:"Defined in",id:"defined-in-24",children:[],level:4}],level:3},{value:"getSigner",id:"getsigner",children:[{value:"Returns",id:"returns-25",children:[],level:4},{value:"Implementation of",id:"implementation-of-1",children:[],level:4},{value:"Defined in",id:"defined-in-25",children:[],level:4}],level:3},{value:"setModalTheme",id:"setmodaltheme",children:[{value:"Parameters",id:"parameters-20",children:[],level:4},{value:"Returns",id:"returns-26",children:[],level:4},{value:"Implementation of",id:"implementation-of-2",children:[],level:4},{value:"Defined in",id:"defined-in-26",children:[],level:4}],level:3},{value:"resetModal",id:"resetmodal",children:[{value:"Returns",id:"returns-27",children:[],level:4},{value:"Implementation of",id:"implementation-of-3",children:[],level:4},{value:"Defined in",id:"defined-in-27",children:[],level:4}],level:3},{value:"changeSigner",id:"changesigner",children:[{value:"Parameters",id:"parameters-21",children:[],level:4},{value:"Returns",id:"returns-28",children:[],level:4},{value:"Implementation of",id:"implementation-of-4",children:[],level:4},{value:"Defined in",id:"defined-in-28",children:[],level:4}],level:3},{value:"activate",id:"activate",children:[{value:"Returns",id:"returns-29",children:[],level:4},{value:"Overrides",id:"overrides",children:[],level:4},{value:"Defined in",id:"defined-in-29",children:[],level:4}],level:3},{value:"getProvider",id:"getprovider",children:[{value:"Returns",id:"returns-30",children:[],level:4},{value:"Overrides",id:"overrides-1",children:[],level:4},{value:"Defined in",id:"defined-in-30",children:[],level:4}],level:3},{value:"getChainId",id:"getchainid",children:[{value:"Returns",id:"returns-31",children:[],level:4},{value:"Overrides",id:"overrides-2",children:[],level:4},{value:"Defined in",id:"defined-in-31",children:[],level:4}],level:3},{value:"getAccount",id:"getaccount",children:[{value:"Returns",id:"returns-32",children:[],level:4},{value:"Overrides",id:"overrides-3",children:[],level:4},{value:"Defined in",id:"defined-in-32",children:[],level:4}],level:3},{value:"setMockAccount",id:"setmockaccount",children:[{value:"Parameters",id:"parameters-22",children:[],level:4},{value:"Returns",id:"returns-33",children:[],level:4},{value:"Defined in",id:"defined-in-33",children:[],level:4}],level:3},{value:"deactivate",id:"deactivate",children:[{value:"Returns",id:"returns-34",children:[],level:4},{value:"Overrides",id:"overrides-4",children:[],level:4},{value:"Defined in",id:"defined-in-34",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties-1",children:[{value:"errorMonitor",id:"errormonitor",children:[{value:"Inherited from",id:"inherited-from-23",children:[],level:4},{value:"Defined in",id:"defined-in-35",children:[],level:4}],level:3},{value:"captureRejectionSymbol",id:"capturerejectionsymbol",children:[{value:"Inherited from",id:"inherited-from-24",children:[],level:4},{value:"Defined in",id:"defined-in-36",children:[],level:4}],level:3},{value:"captureRejections",id:"capturerejections",children:[{value:"Inherited from",id:"inherited-from-25",children:[],level:4},{value:"Defined in",id:"defined-in-37",children:[],level:4}],level:3},{value:"defaultMaxListeners",id:"defaultmaxlisteners",children:[{value:"Inherited from",id:"inherited-from-26",children:[],level:4},{value:"Defined in",id:"defined-in-38",children:[],level:4}],level:3},{value:"supportedChainIds",id:"supportedchainids",children:[{value:"Inherited from",id:"inherited-from-27",children:[],level:4},{value:"Defined in",id:"defined-in-39",children:[],level:4}],level:3},{value:"provider",id:"provider",children:[{value:"Defined in",id:"defined-in-40",children:[],level:4}],level:3},{value:"mockChainId",id:"mockchainid",children:[{value:"Defined in",id:"defined-in-41",children:[],level:4}],level:3},{value:"mockSigner",id:"mocksigner",children:[{value:"Defined in",id:"defined-in-42",children:[],level:4}],level:3},{value:"mockAccount",id:"mockaccount",children:[{value:"Defined in",id:"defined-in-43",children:[],level:4}],level:3},{value:"spyResetModal",id:"spyresetmodal",children:[{value:"Defined in",id:"defined-in-44",children:[],level:4}],level:3},{value:"spySetModalTheme",id:"spysetmodaltheme",children:[{value:"Defined in",id:"defined-in-45",children:[],level:4}],level:3},{value:"spyChangeSigner",id:"spychangesigner",children:[{value:"Defined in",id:"defined-in-46",children:[],level:4}],level:3},{value:"spyActivate",id:"spyactivate",children:[{value:"Defined in",id:"defined-in-47",children:[],level:4}],level:3},{value:"spyDeactivate",id:"spydeactivate",children:[{value:"Defined in",id:"defined-in-48",children:[],level:4}],level:3}],level:2},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters-23",children:[],level:4},{value:"Overrides",id:"overrides-5",children:[],level:4},{value:"Defined in",id:"defined-in-49",children:[],level:4}],level:3}],level:2}],m={toc:p};function k(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/"},"eth-hooks - v4.0.30")," / ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/TestUtils"},"TestUtils")," / MockConnector"),(0,i.kt)("h1",{id:"class-mockconnector"},"Class: MockConnector"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/TestUtils"},"TestUtils"),".MockConnector"),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"AbstractConnector")),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"MockConnector"))))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"ICommonModalConnector")))),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"methods"},"Methods"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#once"},"once")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#on"},"on")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#listenercount"},"listenerCount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#geteventlisteners"},"getEventListeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#addlistener"},"addListener")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#on"},"on")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#once"},"once")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#removelistener"},"removeListener")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#off"},"off")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#removealllisteners"},"removeAllListeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#setmaxlisteners"},"setMaxListeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#getmaxlisteners"},"getMaxListeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#listeners"},"listeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#rawlisteners"},"rawListeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#emit"},"emit")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#listenercount"},"listenerCount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#prependlistener"},"prependListener")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#prependoncelistener"},"prependOnceListener")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#eventnames"},"eventNames")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#emitupdate"},"emitUpdate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#emiterror"},"emitError")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#emitdeactivate"},"emitDeactivate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#replacewithspies"},"replaceWithSpies")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#hascachedprovider"},"hasCachedProvider")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#getsigner"},"getSigner")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#setmodaltheme"},"setModalTheme")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#resetmodal"},"resetModal")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#changesigner"},"changeSigner")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#activate"},"activate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#getprovider"},"getProvider")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#getchainid"},"getChainId")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#getaccount"},"getAccount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#setmockaccount"},"setMockAccount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#deactivate"},"deactivate"))),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#errormonitor"},"errorMonitor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#capturerejectionsymbol"},"captureRejectionSymbol")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#capturerejections"},"captureRejections")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#defaultmaxlisteners"},"defaultMaxListeners")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#supportedchainids"},"supportedChainIds")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#provider"},"provider")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#mockchainid"},"mockChainId")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#mocksigner"},"mockSigner")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#mockaccount"},"mockAccount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#spyresetmodal"},"spyResetModal")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#spysetmodaltheme"},"spySetModalTheme")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#spychangesigner"},"spyChangeSigner")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#spyactivate"},"spyActivate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#spydeactivate"},"spyDeactivate"))),(0,i.kt)("h3",{id:"constructors"},"Constructors"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#constructor"},"constructor"))),(0,i.kt)("h2",{id:"methods-1"},"Methods"),(0,i.kt)("h3",{id:"once"},"once"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"once"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"emitter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]",">"),(0,i.kt)("p",null,"Creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise")," that is fulfilled when the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," emits the given\nevent or that is rejected if the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," emits ",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," while waiting.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise")," will resolve with an array of all the arguments emitted to the\ngiven event."),(0,i.kt)("p",null,"This method is intentionally generic and works with the web platform ",(0,i.kt)("a",{parentName:"p",href:"https://dom.spec.whatwg.org/#interface-eventtarget"},"EventTarget")," interface, which has no special",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," event\nsemantics and does not listen to the ",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," event."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n")),(0,i.kt)("p",null,"The special handling of the ",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," event is only used when ",(0,i.kt)("inlineCode",{parentName:"p"},"events.once()"),"is used to wait for another event. If ",(0,i.kt)("inlineCode",{parentName:"p"},"events.once()")," is used to wait for the\n'",(0,i.kt)("inlineCode",{parentName:"p"},"error'")," event itself, then it is treated as any other kind of event without\nspecial handling:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n")),(0,i.kt)("p",null,"An ",(0,i.kt)("inlineCode",{parentName:"p"},"AbortSignal")," can be used to cancel waiting for the event:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v11.13.0, v10.16.0"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"emitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"NodeEventTarget"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"StaticEventEmitterOptions"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]",">"),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.once"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:157"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"once"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"emitter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]",">"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"emitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"DOMEventTarget"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"StaticEventEmitterOptions"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]",">"),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.once"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:158"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"on"},"on"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"emitter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterableIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n")),(0,i.kt)("p",null,"Returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterator")," that iterates ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName")," events. It will throw\nif the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," emits ",(0,i.kt)("inlineCode",{parentName:"p"},"'error'"),". It removes all listeners when\nexiting the loop. The ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," returned by each iteration is an array\ncomposed of the emitted event arguments."),(0,i.kt)("p",null,"An ",(0,i.kt)("inlineCode",{parentName:"p"},"AbortSignal")," can be used to cancel waiting on events:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v13.6.0, v12.16.0"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"emitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"EventEmitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the event being listened for")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"StaticEventEmitterOptions")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterableIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("p",null,"that iterates ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName")," events emitted by the ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter")),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.on"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:217"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"listenercount"},"listenerCount"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"listenerCount"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"emitter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"A class method that returns the number of listeners for the given ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"registered on the given ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.9.12"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"deprecated"))," Since v3.2.0 - Use ",(0,i.kt)("inlineCode",{parentName:"p"},"listenerCount")," instead."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"emitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"EventEmitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The emitter to query")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The event name")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.listenerCount"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:234"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geteventlisteners"},"getEventListeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"getEventListeners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"emitter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"[]"),(0,i.kt)("p",null,"Returns a copy of the array of listeners for the event named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"."),(0,i.kt)("p",null,"For ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),"s this behaves exactly the same as calling ",(0,i.kt)("inlineCode",{parentName:"p"},".listeners")," on\nthe emitter."),(0,i.kt)("p",null,"For ",(0,i.kt)("inlineCode",{parentName:"p"},"EventTarget"),"s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v15.2.0"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"emitter")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"DOMEventTarget")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"EventEmitter"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"[]"),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.getEventListeners"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:262"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"addlistener"},"addListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Alias for ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.on(eventName, listener)"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.1.26"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.addListener"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:299"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"on-1"},"on"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Adds the ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," function to the end of the listeners array for the\nevent named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),". No checks are made to see if the ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," has\nalready been added. Multiple calls passing the same combination of ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"and ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," will result in the ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," being added, and called, multiple\ntimes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"server.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n")),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,"By default, event listeners are invoked in the order they are added. The",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.prependListener()")," method can be used as an alternative to add the\nevent listener to the beginning of the listeners array."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.1.101"),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the event.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The callback function")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.on"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:330"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"once-1"},"once"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"once"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Adds a ",(0,i.kt)("strong",{parentName:"p"},"one-time"),(0,i.kt)("inlineCode",{parentName:"p"},"listener")," function for the event named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),". The\nnext time ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName")," is triggered, this listener is removed and then invoked."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"server.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n")),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,"By default, event listeners are invoked in the order they are added. The",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.prependOnceListener()")," method can be used as an alternative to add the\nevent listener to the beginning of the listeners array."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.3.0"),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the event.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The callback function")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.once"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:359"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removelistener"},"removeListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Removes the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," from the listener array for the event named",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"removeListener()")," will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", then ",(0,i.kt)("inlineCode",{parentName:"p"},"removeListener()")," must be\ncalled multiple times to remove each instance."),(0,i.kt)("p",null,"Once an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any",(0,i.kt)("inlineCode",{parentName:"p"},"removeListener()")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"removeAllListeners()")," calls ",(0,i.kt)("em",{parentName:"p"},"after")," emitting and",(0,i.kt)("em",{parentName:"p"},"before")," the last listener finishes execution will\nnot remove them from",(0,i.kt)("inlineCode",{parentName:"p"},"emit()")," in progress. Subsequent events behave as expected."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n")),(0,i.kt)("p",null,"Because listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered ",(0,i.kt)("em",{parentName:"p"},"after")," the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.listeners()")," method will need to be recreated."),(0,i.kt)("p",null,"When a single function has been added as a handler multiple times for a single\nevent (as in the example below), ",(0,i.kt)("inlineCode",{parentName:"p"},"removeListener()")," will remove the most\nrecently added instance. In the example the ",(0,i.kt)("inlineCode",{parentName:"p"},"once('ping')"),"listener is removed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n")),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.1.26"),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.removeListener"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:439"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"off"},"off"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Alias for ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.removeListener()"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v10.0.0"),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.off"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:444"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removealllisteners"},"removeAllListeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeAllListeners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"event?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Removes all listeners, or those of the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"."),(0,i.kt)("p",null,"It is bad practice to remove listeners added elsewhere in the code,\nparticularly when the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," instance was created by some other\ncomponent or module (e.g. sockets or file streams)."),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.1.26"),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.removeAllListeners"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:455"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setmaxlisteners"},"setMaxListeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setMaxListeners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"n"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"By default ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),"s will print a warning if more than ",(0,i.kt)("inlineCode",{parentName:"p"},"10")," listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.setMaxListeners()")," method allows the limit to be\nmodified for this specific ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," instance. The value can be set to",(0,i.kt)("inlineCode",{parentName:"p"},"Infinity")," (or ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),") to indicate an unlimited number of listeners."),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.3.5"),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"n")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-11"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.setMaxListeners"),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:465"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getmaxlisteners"},"getMaxListeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getMaxListeners"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Returns the current max listener value for the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," which is either\nset by ",(0,i.kt)("inlineCode",{parentName:"p"},"emitter.setMaxListeners(n)")," or defaults to ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector#defaultmaxlisteners"},"defaultMaxListeners"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v1.0.0"),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"inherited-from-12"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.getMaxListeners"),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:471"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"listeners"},"listeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"listeners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"[]"),(0,i.kt)("p",null,"Returns a copy of the array of listeners for the event named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"server.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.1.26"),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"[]"),(0,i.kt)("h4",{id:"inherited-from-13"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.listeners"),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:484"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rawlisteners"},"rawListeners"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"rawListeners"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"[]"),(0,i.kt)("p",null,"Returns a copy of the array of listeners for the event named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),",\nincluding any wrappers (such as those created by ",(0,i.kt)("inlineCode",{parentName:"p"},".once()"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v9.4.0"),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Function"),"[]"),(0,i.kt)("h4",{id:"inherited-from-14"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.rawListeners"),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:514"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emit"},"emit"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"emit"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Synchronously calls each of the listeners registered for the event named",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", in the order they were registered, passing the supplied arguments\nto each."),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the event had listeners, ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v0.1.26"),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"inherited-from-15"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.emit"),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:555"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"listenercount-1"},"listenerCount"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"listenerCount"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Returns the number of listeners listening to the event named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v3.2.0"),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the event being listened for")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"inherited-from-16"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.listenerCount"),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:561"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"prependlistener"},"prependListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"prependListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Adds the ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," function to the ",(0,i.kt)("em",{parentName:"p"},"beginning")," of the listeners array for the\nevent named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),". No checks are made to see if the ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," has\nalready been added. Multiple calls passing the same combination of ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),"and ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," will result in the ",(0,i.kt)("inlineCode",{parentName:"p"},"listener")," being added, and called, multiple\ntimes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"server.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n")),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v6.0.0"),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the event.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The callback function")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-17"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.prependListener"),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:579"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"prependoncelistener"},"prependOnceListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"prependOnceListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("p",null,"Adds a ",(0,i.kt)("strong",{parentName:"p"},"one-time"),(0,i.kt)("inlineCode",{parentName:"p"},"listener")," function for the event named ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName")," to the",(0,i.kt)("em",{parentName:"p"},"beginning")," of the listeners array. The next time ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName")," is triggered, this\nlistener is removed, and then invoked."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"server.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n")),(0,i.kt)("p",null,"Returns a reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter"),", so that calls can be chained."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v6.0.0"),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"symbol")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the event.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The callback function")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/TestUtils.MockConnector"},(0,i.kt)("inlineCode",{parentName:"a"},"MockConnector"))),(0,i.kt)("h4",{id:"inherited-from-18"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.prependOnceListener"),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:595"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"eventnames"},"eventNames"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"eventNames"),"(): (",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol"),")[]"),(0,i.kt)("p",null,"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or ",(0,i.kt)("inlineCode",{parentName:"p"},"Symbol"),"s."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"since"))," v6.0.0"),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,"(",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol"),")[]"),(0,i.kt)("h4",{id:"inherited-from-19"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.eventNames"),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:614"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emitupdate"},"emitUpdate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"emitUpdate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"update"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"update")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ConnectorUpdate"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number"),">")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-20"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.emitUpdate"),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"node_modules/@web3-react/core/node_modules/@web3-react/abstract-connector/dist/index.d.ts:12"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emiterror"},"emitError"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"emitError"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"error"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"error")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Error"))))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-21"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.emitError"),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"node_modules/@web3-react/core/node_modules/@web3-react/abstract-connector/dist/index.d.ts:13"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emitdeactivate"},"emitDeactivate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"emitDeactivate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-22"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.emitDeactivate"),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"node_modules/@web3-react/core/node_modules/@web3-react/abstract-connector/dist/index.d.ts:14"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"replacewithspies"},"replaceWithSpies"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"replaceWithSpies"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L33"},"src/helpers/test-utils/wrapper/MockConnector.ts:33")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hascachedprovider"},"hasCachedProvider"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasCachedProvider"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"},"ICommonModalConnector"),".",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector#hascachedprovider"},"hasCachedProvider")),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L39"},"src/helpers/test-utils/wrapper/MockConnector.ts:39")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getsigner"},"getSigner"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getSigner"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Signer")),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Signer")),(0,i.kt)("h4",{id:"implementation-of-1"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"},"ICommonModalConnector"),".",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector#getsigner"},"getSigner")),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L43"},"src/helpers/test-utils/wrapper/MockConnector.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setmodaltheme"},"setModalTheme"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setModalTheme"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"_theme"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_theme")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"light"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dark"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ThemeColors"))))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-2"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"},"ICommonModalConnector"),".",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector#setmodaltheme"},"setModalTheme")),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L46"},"src/helpers/test-utils/wrapper/MockConnector.ts:46")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resetmodal"},"resetModal"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"resetModal"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-3"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"},"ICommonModalConnector"),".",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector#resetmodal"},"resetModal")),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L49"},"src/helpers/test-utils/wrapper/MockConnector.ts:49")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"changesigner"},"changeSigner"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"changeSigner"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"_signer"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_signer")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Signer"))))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"implementation-of-4"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector"},"ICommonModalConnector"),".",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/interfaces/EthersContext.ICommonModalConnector#changesigner"},"changeSigner")),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L53"},"src/helpers/test-utils/wrapper/MockConnector.ts:53")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activate"},"activate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"ConnectorUpdate"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">",">"),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"ConnectorUpdate"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">",">"),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,"AbstractConnector.activate"),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L61"},"src/helpers/test-utils/wrapper/MockConnector.ts:61")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getprovider"},"getProvider"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getProvider"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tethersprovider"},(0,i.kt)("inlineCode",{parentName:"a"},"TEthersProvider"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"MockProvider"),">"),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/modules/Models#tethersprovider"},(0,i.kt)("inlineCode",{parentName:"a"},"TEthersProvider"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"MockProvider"),">"),(0,i.kt)("h4",{id:"overrides-1"},"Overrides"),(0,i.kt)("p",null,"AbstractConnector.getProvider"),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L69"},"src/helpers/test-utils/wrapper/MockConnector.ts:69")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getchainid"},"getChainId"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getChainId"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("h4",{id:"overrides-2"},"Overrides"),(0,i.kt)("p",null,"AbstractConnector.getChainId"),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L73"},"src/helpers/test-utils/wrapper/MockConnector.ts:73")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getaccount"},"getAccount"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getAccount"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,i.kt)("h4",{id:"overrides-3"},"Overrides"),(0,i.kt)("p",null,"AbstractConnector.getAccount"),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L77"},"src/helpers/test-utils/wrapper/MockConnector.ts:77")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setmockaccount"},"setMockAccount"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setMockAccount"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"hardhatAccountIndex"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"hardhatAccountIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L82"},"src/helpers/test-utils/wrapper/MockConnector.ts:82")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deactivate"},"deactivate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deactivate"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"overrides-4"},"Overrides"),(0,i.kt)("p",null,"AbstractConnector.deactivate"),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L87"},"src/helpers/test-utils/wrapper/MockConnector.ts:87")),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"errormonitor"},"errorMonitor"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"errorMonitor"),": typeof ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/EthersContext.EthersModalConnector#errormonitor"},(0,i.kt)("inlineCode",{parentName:"a"},"errorMonitor"))),(0,i.kt)("p",null,"This symbol shall be used to install a listener for only monitoring ",(0,i.kt)("inlineCode",{parentName:"p"},"'error'"),"\nevents. Listeners installed using this symbol are called before the regular\n",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," listeners are called."),(0,i.kt)("p",null,"Installing a listener using this symbol does not change the behavior once an\n",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," event is emitted, therefore the process will still crash if no\nregular ",(0,i.kt)("inlineCode",{parentName:"p"},"'error'")," listener is installed."),(0,i.kt)("h4",{id:"inherited-from-23"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.errorMonitor"),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:272"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"capturerejectionsymbol"},"captureRejectionSymbol"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"captureRejectionSymbol"),": typeof ",(0,i.kt)("a",{parentName:"p",href:"/eth-hooks/docs/api/classes/EthersContext.EthersModalConnector#capturerejectionsymbol"},(0,i.kt)("inlineCode",{parentName:"a"},"captureRejectionSymbol"))),(0,i.kt)("h4",{id:"inherited-from-24"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.captureRejectionSymbol"),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:273"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"capturerejections"},"captureRejections"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"captureRejections"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Sets or gets the default captureRejection value for all emitters."),(0,i.kt)("h4",{id:"inherited-from-25"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.captureRejections"),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:278"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"defaultmaxlisteners"},"defaultMaxListeners"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"defaultMaxListeners"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"inherited-from-26"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.defaultMaxListeners"),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/events.d.ts:279"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"supportedchainids"},"supportedChainIds"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"supportedChainIds"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]"),(0,i.kt)("h4",{id:"inherited-from-27"},"Inherited from"),(0,i.kt)("p",null,"AbstractConnector.supportedChainIds"),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"node_modules/@web3-react/core/node_modules/@web3-react/abstract-connector/dist/index.d.ts:5"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"provider"},"provider"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"provider"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"MockProvider")),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L14"},"src/helpers/test-utils/wrapper/MockConnector.ts:14")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mockchainid"},"mockChainId"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"mockChainId"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L15"},"src/helpers/test-utils/wrapper/MockConnector.ts:15")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mocksigner"},"mockSigner"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"mockSigner"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Signer")),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L17"},"src/helpers/test-utils/wrapper/MockConnector.ts:17")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mockaccount"},"mockAccount"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"mockAccount"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L18"},"src/helpers/test-utils/wrapper/MockConnector.ts:18")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"spyresetmodal"},"spyResetModal"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"spyResetModal"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"SinonStub"),"<[], ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L20"},"src/helpers/test-utils/wrapper/MockConnector.ts:20")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"spysetmodaltheme"},"spySetModalTheme"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"spySetModalTheme"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"SinonStub"),"<","[_",'theme: "light" ',"|",' "dark" ',"|"," ThemeColors]",", ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L21"},"src/helpers/test-utils/wrapper/MockConnector.ts:21")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"spychangesigner"},"spyChangeSigner"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"spyChangeSigner"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"SinonStub"),"<","[_","signer: Signer]",", ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L22"},"src/helpers/test-utils/wrapper/MockConnector.ts:22")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"spyactivate"},"spyActivate"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"spyActivate"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"SinonStub"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[], ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L23"},"src/helpers/test-utils/wrapper/MockConnector.ts:23")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"spydeactivate"},"spyDeactivate"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"spyDeactivate"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"SinonStub"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[], ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L24"},"src/helpers/test-utils/wrapper/MockConnector.ts:24")),(0,i.kt)("h2",{id:"constructors-1"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new MockConnector"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"provider"),")"),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"provider")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MockProvider"))))),(0,i.kt)("h4",{id:"overrides-5"},"Overrides"),(0,i.kt)("p",null,"AbstractConnector.constructor"),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/eth-hooks/blob/f69d7cc/src/helpers/test-utils/wrapper/MockConnector.ts#L26"},"src/helpers/test-utils/wrapper/MockConnector.ts:26")))}k.isMDXComponent=!0}}]);